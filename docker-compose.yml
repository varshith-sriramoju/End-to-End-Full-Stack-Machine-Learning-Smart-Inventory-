services:
  db:
    image: mysql:8.0
    environment:
      MYSQL_DATABASE: smartinventory2
      MYSQL_ROOT_PASSWORD: root
    command: [
      "--default-authentication-plugin=mysql_native_password",
      "--character-set-server=utf8mb4",
      "--collation-server=utf8mb4_unicode_ci",
      "--sql-mode=STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION"
    ]
    volumes:
      - mysql_data:/var/lib/mysql
    # No host port published here; local dev mapping is defined in docker-compose.override.yml
    healthcheck:
      test: ["CMD-SHELL", "mysqladmin ping -h localhost -proot || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 3

  web:
    build: .
    ports:
      - "8000:8000"
    volumes:
      - .:/app
      - static_volume:/app/staticfiles
      - media_volume:/app/media
    env_file: .env.development
    environment:
      # Overrides or additions specific to container runtime (keep minimal)
      PYTHONUNBUFFERED: "1"
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    command: >
      sh -c "python manage.py makemigrations &&
             python manage.py migrate &&
             python manage.py collectstatic --noinput &&
             python manage.py runserver 0.0.0.0:8000"

  celery:
    build: .
    volumes:
      - .:/app
      - media_volume:/app/media
    env_file: .env.development
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    command: celery -A smartinventory worker --loglevel=info

  celery-beat:
    build: .
    volumes:
      - .:/app
      - media_volume:/app/media
    env_file: .env.development
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    command: celery -A smartinventory beat --loglevel=info

volumes:
  mysql_data:
  redis_data:
  static_volume:
  media_volume: