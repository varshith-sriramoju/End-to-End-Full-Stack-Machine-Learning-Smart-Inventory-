# Generated by Django 5.0.1 on 2025-09-21 17:21

import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("core", "0001_initial"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="MLModel",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("name", models.CharField(max_length=100)),
                ("version", models.CharField(max_length=50)),
                ("algorithm", models.CharField(max_length=100)),
                ("hyperparameters", models.JSONField(default=dict)),
                ("performance_metrics", models.JSONField(default=dict)),
                ("model_file_path", models.CharField(max_length=500)),
                ("is_active", models.BooleanField(default=False)),
                ("training_data_version", models.CharField(blank=True, max_length=100)),
                ("training_date", models.DateTimeField()),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(class)s_created",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "ordering": ["-training_date"],
                "unique_together": {("name", "version")},
            },
        ),
        migrations.CreateModel(
            name="BatchPredictionJob",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "Pending"),
                            ("processing", "Processing"),
                            ("completed", "Completed"),
                            ("failed", "Failed"),
                        ],
                        default="pending",
                        max_length=20,
                    ),
                ),
                ("prediction_date_start", models.DateField()),
                ("prediction_date_end", models.DateField()),
                ("stores_filter", models.JSONField(blank=True, default=list)),
                ("products_filter", models.JSONField(blank=True, default=list)),
                ("total_predictions", models.IntegerField(default=0)),
                ("completed_predictions", models.IntegerField(default=0)),
                ("error_log", models.TextField(blank=True)),
                ("celery_task_id", models.CharField(blank=True, max_length=255)),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(class)s_created",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "model",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="forecasting.mlmodel",
                    ),
                ),
            ],
            options={
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="InventoryAlert",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "alert_type",
                    models.CharField(
                        choices=[
                            ("stockout_risk", "Stockout Risk"),
                            ("overstock_risk", "Overstock Risk"),
                            ("demand_spike", "Demand Spike"),
                            ("trend_change", "Trend Change"),
                        ],
                        max_length=20,
                    ),
                ),
                (
                    "priority",
                    models.CharField(
                        choices=[
                            ("low", "Low"),
                            ("medium", "Medium"),
                            ("high", "High"),
                            ("critical", "Critical"),
                        ],
                        max_length=10,
                    ),
                ),
                ("message", models.TextField()),
                ("predicted_stockout_date", models.DateField(blank=True, null=True)),
                ("current_inventory", models.IntegerField(blank=True, null=True)),
                ("recommended_action", models.TextField(blank=True)),
                ("is_acknowledged", models.BooleanField(default=False)),
                ("acknowledged_at", models.DateTimeField(blank=True, null=True)),
                (
                    "acknowledged_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="acknowledged_alerts",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(class)s_created",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "product",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="core.product"
                    ),
                ),
                (
                    "store",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="core.store"
                    ),
                ),
            ],
            options={
                "ordering": ["-created_at", "priority"],
                "indexes": [
                    models.Index(
                        fields=["store", "product"],
                        name="forecasting_store_i_a3c8f4_idx",
                    ),
                    models.Index(
                        fields=["alert_type", "priority"],
                        name="forecasting_alert_t_d392c4_idx",
                    ),
                    models.Index(
                        fields=["is_acknowledged"],
                        name="forecasting_is_ackn_2cb5e2_idx",
                    ),
                ],
            },
        ),
        migrations.CreateModel(
            name="ForecastPrediction",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("prediction_date", models.DateField()),
                ("predicted_demand", models.FloatField()),
                ("confidence_interval_lower", models.FloatField(blank=True, null=True)),
                ("confidence_interval_upper", models.FloatField(blank=True, null=True)),
                ("actual_demand", models.FloatField(blank=True, null=True)),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(class)s_created",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "product",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="core.product"
                    ),
                ),
                (
                    "store",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="core.store"
                    ),
                ),
                (
                    "model",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="forecasting.mlmodel",
                    ),
                ),
            ],
            options={
                "ordering": ["prediction_date"],
                "indexes": [
                    models.Index(
                        fields=["prediction_date"],
                        name="forecasting_predict_297d6a_idx",
                    ),
                    models.Index(
                        fields=["store", "product"],
                        name="forecasting_store_i_c339ff_idx",
                    ),
                    models.Index(
                        fields=["prediction_date", "store"],
                        name="forecasting_predict_b42734_idx",
                    ),
                ],
                "unique_together": {("model", "store", "product", "prediction_date")},
            },
        ),
        migrations.CreateModel(
            name="ModelPerformanceMetric",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("evaluation_date", models.DateField()),
                ("date_range_start", models.DateField()),
                ("date_range_end", models.DateField()),
                ("mae", models.FloatField()),
                ("rmse", models.FloatField()),
                ("mape", models.FloatField()),
                ("r2_score", models.FloatField(blank=True, null=True)),
                ("sample_size", models.IntegerField()),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(class)s_created",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "model",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="forecasting.mlmodel",
                    ),
                ),
            ],
            options={
                "ordering": ["-evaluation_date"],
                "indexes": [
                    models.Index(
                        fields=["model", "evaluation_date"],
                        name="forecasting_model_i_19d036_idx",
                    )
                ],
            },
        ),
    ]
